{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PayPalButton = void 0;\nvar _react = _interopRequireDefault(require(\"react\"));\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n  return _assertThisInitialized(self);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar PayPalButton = /*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PayPalButton, _React$Component);\n  function PayPalButton(props) {\n    var _this;\n    _classCallCheck(this, PayPalButton);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PayPalButton).call(this, props));\n    _this.state = {\n      isSdkReady: false\n    };\n    return _this;\n  }\n  _createClass(PayPalButton, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (typeof window !== \"undefined\" && window !== undefined && window.paypal === undefined) {\n        this.addPaypalSdk();\n      } else if (typeof window !== \"undefined\" && window !== undefined && window.paypal !== undefined && this.props.onButtonReady) {\n        this.props.onButtonReady();\n      }\n    }\n  }, {\n    key: \"createOrder\",\n    value: function createOrder(data, actions) {\n      var _this$props = this.props,\n        currency = _this$props.currency,\n        options = _this$props.options,\n        amount = _this$props.amount,\n        shippingPreference = _this$props.shippingPreference;\n      return actions.order.create({\n        purchase_units: [{\n          amount: {\n            currency_code: currency ? currency : options && options.currency ? options.currency : \"USD\",\n            value: amount.toString()\n          }\n        }],\n        application_context: {\n          shipping_preference: shippingPreference\n        }\n      });\n    }\n  }, {\n    key: \"onApprove\",\n    value: function onApprove(data, actions) {\n      var _this2 = this;\n      return actions.order.capture().then(function (details) {\n        if (_this2.props.onSuccess) {\n          return _this2.props.onSuccess(details, data);\n        }\n      })[\"catch\"](function (err) {\n        if (_this2.props.catchError) {\n          return _this2.props.catchError(err);\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props2 = this.props,\n        amount = _this$props2.amount,\n        onSuccess = _this$props2.onSuccess,\n        createOrder = _this$props2.createOrder,\n        createSubscription = _this$props2.createSubscription,\n        onApprove = _this$props2.onApprove,\n        style = _this$props2.style;\n      var isSdkReady = this.state.isSdkReady;\n      if (!isSdkReady && (typeof window === \"undefined\" || window.paypal === undefined)) {\n        return null;\n      }\n      var Button = window.paypal.Buttons.driver(\"react\", {\n        React: _react[\"default\"],\n        ReactDOM: _reactDom[\"default\"]\n      });\n      var createOrderFn = amount && !createOrder ? function (data, actions) {\n        return _this3.createOrder(data, actions);\n      } : function (data, actions) {\n        return createOrder(data, actions);\n      };\n      return _react[\"default\"].createElement(Button, _extends({}, this.props, {\n        createOrder: createSubscription ? undefined : createOrderFn,\n        createSubscription: createSubscription,\n        onApprove: onSuccess ? function (data, actions) {\n          return _this3.onApprove(data, actions);\n        } : function (data, actions) {\n          return onApprove(data, actions);\n        },\n        style: style\n      }));\n    }\n  }, {\n    key: \"addPaypalSdk\",\n    value: function addPaypalSdk() {\n      var _this4 = this;\n      var _this$props3 = this.props,\n        options = _this$props3.options,\n        onButtonReady = _this$props3.onButtonReady;\n      var queryParams = []; // replacing camelCase with dashes\n\n      Object.keys(options).forEach(function (k) {\n        var name = k.split(/(?=[A-Z])/).join(\"-\").toLowerCase();\n        queryParams.push(\"\".concat(name, \"=\").concat(options[k]));\n      });\n      var script = document.createElement(\"script\");\n      script.type = \"text/javascript\";\n      script.src = \"https://www.paypal.com/sdk/js?\".concat(queryParams.join(\"&\"));\n      script.async = true;\n      script.onload = function () {\n        _this4.setState({\n          isSdkReady: true\n        });\n        if (onButtonReady) {\n          onButtonReady();\n        }\n      };\n      script.onerror = function () {\n        throw new Error(\"Paypal SDK could not be loaded.\");\n      };\n      document.body.appendChild(script);\n    }\n  }]);\n  return PayPalButton;\n}(_react[\"default\"].Component);\nexports.PayPalButton = PayPalButton;\n_defineProperty(PayPalButton, \"propTypes\", {\n  amount: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n  shippingPreference: _propTypes[\"default\"].string,\n  onSuccess: _propTypes[\"default\"].func,\n  catchError: _propTypes[\"default\"].func,\n  onError: _propTypes[\"default\"].func,\n  createOrder: _propTypes[\"default\"].func,\n  createSubscription: _propTypes[\"default\"].func,\n  onApprove: _propTypes[\"default\"].func,\n  style: _propTypes[\"default\"].object,\n  options: _propTypes[\"default\"].shape({\n    clientId: _propTypes[\"default\"].string,\n    merchantId: _propTypes[\"default\"].string,\n    currency: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].number, _propTypes[\"default\"].string]),\n    intent: _propTypes[\"default\"].string,\n    commit: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    vault: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string]),\n    component: _propTypes[\"default\"].string,\n    disableFunding: _propTypes[\"default\"].string,\n    disableCard: _propTypes[\"default\"].string,\n    integrationDate: _propTypes[\"default\"].string,\n    locale: _propTypes[\"default\"].string,\n    buyerCountry: _propTypes[\"default\"].string,\n    debug: _propTypes[\"default\"].oneOfType([_propTypes[\"default\"].bool, _propTypes[\"default\"].string])\n  }),\n  onButtonReady: _propTypes[\"default\"].func\n});\n_defineProperty(PayPalButton, \"defaultProps\", {\n  style: {},\n  options: {\n    clientId: \"sb\",\n    currency: \"USD\"\n  },\n  shippingPreference: \"GET_FROM_FILE\"\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}