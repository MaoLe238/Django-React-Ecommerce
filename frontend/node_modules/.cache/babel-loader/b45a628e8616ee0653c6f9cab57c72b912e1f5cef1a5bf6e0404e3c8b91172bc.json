{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG STRIX\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Ecommerce\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport { Form, Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { getOrderDetails } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OrderScreen() {\n  _s();\n  const {\n    orderId\n  } = useParams();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    error,\n    loading\n  } = orderDetails;\n  if (!loading && !error) {\n    order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2);\n  }\n  useEffect(() => {\n    if (!order || order._id !== Number(orderId)) {\n      dispatch(getOrderDetails(orderId));\n    }\n  }, [order, orderId]);\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order: \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(OrderScreen, \"KYgNsK+iumctgBb7qVYDlrYq8TM=\", false, function () {\n  return [useParams, useNavigate, useDispatch, useSelector];\n});\n_c = OrderScreen;\nexport default OrderScreen;\nvar _c;\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","useNavigate","useParams","Form","Button","Row","Col","Image","Card","ListGroup","useDispatch","useSelector","Loader","Message","getOrderDetails","ORDER_CREATE_RESET","jsxDEV","_jsxDEV","OrderScreen","_s","orderId","navigate","dispatch","orderDetails","state","order","error","loading","itemsPrice","orderItems","reduce","acc","item","price","qty","toFixed","_id","Number","fileName","_jsxFileName","lineNumber","columnNumber","variant","children","_c","$RefreshReg$"],"sources":["C:/Users/ROG STRIX/OneDrive/Máy tính/Ecommerce/frontend/src/screens/OrderScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link, useLocation, useNavigate, useParams } from 'react-router-dom'\r\nimport { Form, Button, Row, Col, Image, Card, ListGroup } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\n\r\nimport { getOrderDetails } from '../actions/orderActions'\r\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\r\n\r\nfunction OrderScreen() {\r\n    const { orderId } = useParams()\r\n    const navigate = useNavigate()\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, error, loading } = orderDetails\r\n\r\n    if (!loading && !error) {\r\n        order.itemsPrice = order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (!order || order._id !== Number(orderId)) {\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n\r\n    }, [order, orderId])\r\n\r\n    return loading ? (\r\n        <Loader />\r\n    ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n        <div>\r\n            <h1>Order: {order._id}</h1>\r\n            {/* <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {order.shippingAddress.address}, {order.shippingAddress.city}\r\n                                {' '}\r\n                                {order.shippingAddress.postalCode},\r\n                                {' '}\r\n                                {order.shippingAddress.country},\r\n                            </p>\r\n\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {order.paymentMethod}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {order.orderItems.length === 0 ? <Message variant='info'>\r\n                                Order is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {order.orderItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                </Col>\r\n\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                                </Col>\r\n\r\n                                                <Col md={4}>\r\n                                                    {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${order.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${order.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${order.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${order.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrderScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,EAAEC,WAAW,EAAEC,WAAW,EAAEC,SAAS,QAAQ,kBAAkB;AAC5E,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,EAAEC,KAAK,EAAEC,IAAI,EAAEC,SAAS,QAAQ,iBAAiB;AAChF,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAE3C,SAASC,eAAe,QAAQ,yBAAyB;AACzD,SAASC,kBAAkB,QAAQ,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhE,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM;IAAEC;EAAQ,CAAC,GAAGlB,SAAS,CAAC,CAAC;EAC/B,MAAMmB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9B,MAAMqB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAMa,YAAY,GAAGZ,WAAW,CAACa,KAAK,IAAIA,KAAK,CAACD,YAAY,CAAC;EAC7D,MAAM;IAAEE,KAAK;IAAEC,KAAK;IAAEC;EAAQ,CAAC,GAAGJ,YAAY;EAE9C,IAAI,CAACI,OAAO,IAAI,CAACD,KAAK,EAAE;IACpBD,KAAK,CAACG,UAAU,GAAGH,KAAK,CAACI,UAAU,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAGC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,GAAG,EAAE,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC;EACxG;EAEArC,SAAS,CAAC,MAAM;IACZ,IAAI,CAAC2B,KAAK,IAAIA,KAAK,CAACW,GAAG,KAAKC,MAAM,CAACjB,OAAO,CAAC,EAAE;MACzCE,QAAQ,CAACR,eAAe,CAACM,OAAO,CAAC,CAAC;IACtC;EAEJ,CAAC,EAAE,CAACK,KAAK,EAAEL,OAAO,CAAC,CAAC;EAEpB,OAAOO,OAAO,gBACVV,OAAA,CAACL,MAAM;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC,GACVf,KAAK,gBACLT,OAAA,CAACJ,OAAO;IAAC6B,OAAO,EAAC,QAAQ;IAAAC,QAAA,EAAEjB;EAAK;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU,CAAC,gBAE3CxB,OAAA;IAAA0B,QAAA,eACI1B,OAAA;MAAA0B,QAAA,GAAI,SAAO,EAAClB,KAAK,CAACW,GAAG;IAAA;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA6F1B,CACR;AACL;AAACtB,EAAA,CAxHQD,WAAW;EAAA,QACIhB,SAAS,EACZD,WAAW,EACXS,WAAW,EAEPC,WAAW;AAAA;AAAAiC,EAAA,GAL3B1B,WAAW;AA0HpB,eAAeA,WAAW;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}