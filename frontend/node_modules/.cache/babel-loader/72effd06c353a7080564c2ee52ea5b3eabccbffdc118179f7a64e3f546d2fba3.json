{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ROG STRIX\\\\OneDrive\\\\M\\xE1y t\\xEDnh\\\\Ecommerce\\\\frontend\\\\src\\\\screens\\\\PaymentScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { Form, Button, Row, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentScreen() {\n  _s();\n  const navigate = useNavigate();\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n  const dispatch = useDispatch();\n  const [paymentMethod, setPaymentMethod] = useState('Paypal');\n  if (!shippingAddress.address) {\n    navigate('/shipping');\n  }\n  const submitHandler = e => {\n    e.preventDefault();\n    // dispatch(savePaymentMethod(paymentMethod))\n    navigate('/placeorder');\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true,\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            as: \"legend\",\n            children: \"Select Method\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: \"Paypal or Credit Card\",\n              id: \"paypal\",\n              name: \"paymentMethod\",\n              checked: true,\n              onChange: e => setPaymentMethod(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentScreen, \"ijFtHY0BHNYPz+cIX4JnZvk25G4=\", false, function () {\n  return [useNavigate, useSelector, useDispatch];\n});\n_c = PaymentScreen;\nexport default PaymentScreen;\nvar _c;\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Form","Button","Row","Col","useDispatch","useSelector","Loader","Message","FormContainer","CheckoutSteps","savePaymentMethod","jsxDEV","_jsxDEV","PaymentScreen","_s","navigate","cart","state","shippingAddress","dispatch","paymentMethod","setPaymentMethod","address","submitHandler","e","preventDefault","children","step1","step2","step3","onSubmit","Group","Label","as","fileName","_jsxFileName","lineNumber","columnNumber","Check","type","label","id","name","checked","onChange","target","value","_c","$RefreshReg$"],"sources":["C:/Users/ROG STRIX/OneDrive/Máy tính/Ecommerce/frontend/src/screens/PaymentScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useLocation, useNavigate } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nfunction PaymentScreen() {\r\n\r\n    const navigate = useNavigate()\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('Paypal')\r\n\r\n    if(!shippingAddress.address){\r\n        navigate('/shipping')\r\n\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // dispatch(savePaymentMethod(paymentMethod))\r\n        navigate('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3>\r\n                <Form onSubmit={submitHandler}>\r\n                    <Form.Group>\r\n                        <Form.Label as='legend'>Select Method</Form.Label>\r\n                        <Col>\r\n                            <Form.Check\r\n                                type='radio'\r\n                                label='Paypal or Credit Card'\r\n                                id='paypal'\r\n                                name='paymentMethod'\r\n                                checked\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}\r\n                            >\r\n\r\n                            </Form.Check>\r\n                        </Col>\r\n                    </Form.Group>\r\n\r\n                    {/* <Button type='submit' variant='primary'>\r\n                        Continue\r\n                    </Button> */}\r\n                </Form>\r\n            </CheckoutSteps>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,SAASC,IAAI,EAAEC,MAAM,EAAEC,GAAG,EAAEC,GAAG,QAAQ,iBAAiB;AACxD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,aAAa,MAAM,6BAA6B;AACvD,OAAOC,aAAa,MAAM,6BAA6B;AACvD,SAASC,iBAAiB,QAAQ,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EAErB,MAAMC,QAAQ,GAAGhB,WAAW,CAAC,CAAC;EAC9B,MAAMiB,IAAI,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAC7C,MAAM;IAAEE;EAAgB,CAAC,GAAGF,IAAI;EAEhC,MAAMG,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGzB,QAAQ,CAAC,QAAQ,CAAC;EAE5D,IAAG,CAACsB,eAAe,CAACI,OAAO,EAAC;IACxBP,QAAQ,CAAC,WAAW,CAAC;EAEzB;EAEA,MAAMQ,aAAa,GAAIC,CAAC,IAAK;IACzBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACAV,QAAQ,CAAC,aAAa,CAAC;EAC3B,CAAC;EAED,oBACIH,OAAA,CAACJ,aAAa;IAAAkB,QAAA,eACVd,OAAA,CAACH,aAAa;MAACkB,KAAK;MAACC,KAAK;MAACC,KAAK;MAAAH,QAAA,eAC5Bd,OAAA,CAACZ,IAAI;QAAC8B,QAAQ,EAAEP,aAAc;QAAAG,QAAA,eAC1Bd,OAAA,CAACZ,IAAI,CAAC+B,KAAK;UAAAL,QAAA,gBACPd,OAAA,CAACZ,IAAI,CAACgC,KAAK;YAACC,EAAE,EAAC,QAAQ;YAAAP,QAAA,EAAC;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAClDzB,OAAA,CAACT,GAAG;YAAAuB,QAAA,eACAd,OAAA,CAACZ,IAAI,CAACsC,KAAK;cACPC,IAAI,EAAC,OAAO;cACZC,KAAK,EAAC,uBAAuB;cAC7BC,EAAE,EAAC,QAAQ;cACXC,IAAI,EAAC,eAAe;cACpBC,OAAO;cACPC,QAAQ,EAAGpB,CAAC,IAAKH,gBAAgB,CAACG,CAAC,CAACqB,MAAM,CAACC,KAAK;YAAE;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAG1C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAExB;AAACvB,EAAA,CAhDQD,aAAa;EAAA,QAEDd,WAAW,EACfM,WAAW,EAGPD,WAAW;AAAA;AAAA2C,EAAA,GANvBlC,aAAa;AAkDtB,eAAeA,aAAa;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}